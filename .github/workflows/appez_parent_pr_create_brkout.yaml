# Look for the tags __MAKE__CHANGES__FROM__HERE__ and __MAKE__CHANGES__TO__HERE__
name: "Pull request create from breakout to parent"
on:
  pull_request:
    types:
    - opened
    - synchronize
    # run on pull request to parent of breakout branch
    branches:
    - c/j5k--e/p9--f/n8pdj--b/gk

env:
  brkoutName: pr-${{ github.event.number }}

jobs:
  brkout-pr-to-parent:
    if: github.head_ref == 'c/j5k--e/p9--f/n8pdj--b/hb'
    runs-on: [usvcs-runner]
    steps:
    - uses: actions/checkout@v4

    - name: Build deployments
      id: build
      timeout-minutes: 20
      run: |
        echo "$brkoutName"
        # __MAKE__CHANGES__FROM__HERE__

        # place build commands here
        # Build image and push to registry for container 'server' of deployment 'shippingservice'
        tag=`git rev-parse --short=8 HEAD`
        cd src/shippingservice
        docker buildx build . -t registry.gitlab.com/novusbee/microservices/shippingservice:${tag}
        docker push registry.gitlab.com/novusbee/microservices/shippingservice:${tag}
        echo "IMAGE_shippingservice_server=registry.gitlab.com/novusbee/microservices/shippingservice:${tag}" >> $GITHUB_OUTPUT
        cd ../..
        
        # __MAKE__CHANGES__TO__HERE__

    - name: Generate Breakout File
      timeout-minutes: 20
      run: |
        cat <<EOF > breakout.yaml
        apiVersion: appez.kubefocus.com/v1beta1
        kind: Breakout
        metadata:
          annotations:
            appez-application-repo-branch: c/j5k--e/p9--f/n8pdj--b/hb
            appez-resource-namespace: -b-9gcnd6q
          creationTimestamp: null
          name: '%%BRKOUT_NAME%%'
          namespace: o-fwn-c-j5k-e-p9-d-9zs-i-n8pdj
        spec:
          application: microservices-demo
          baseBreakout: appez-dflt-brkout
          breakout: prod-fs003-1
          cluster: do1
          environment: prod
          feature: freeshipping
          isPRBreakout: false
          moduleRefs:
          - containers:
            - buildCommands: |
                tag=`git rev-parse --short=8 HEAD`
                cd src/shippingservice
                docker buildx build . -t registry.gitlab.com/novusbee/microservices/shippingservice:${tag}
                docker push registry.gitlab.com/novusbee/microservices/shippingservice:${tag}
                echo "IMAGE_shippingservice_server=registry.gitlab.com/novusbee/microservices/shippingservice:${tag}" >> %%GITHUB_OUTPUT%%
                cd ../..
              env:
              - name: NUM_ITEMS_FOR_FREE_SHIPPING
                value: "003"
              envType: Add
              image: ${{ steps.build.outputs.IMAGE_shippingservice_server }}
              name: server
              resources: {}
            kind: Deployment
            name: shippingservice
          - kind: Service
            name: shippingservice
          organization: kubefocus.com
          resourceAuthzId: b71ba484-a222-438a-9513-726722baecbc
          routingRules:
            httpRoute: {}
          scope: public
        status: {}
        EOF
        sed -i "s|%%BRKOUT_NAME%%|$brkoutName|g" breakout.yaml
        cat breakout.yaml

    - name: Create Breakout on PR opened
      if: github.event.action == 'opened'
      run: |
        echo "I just created a PR and will create the corresponding breakout"
        curl -X POST https://appez.kubefocus.com/api/v1/breakouts -H 'Content-Type: application/x-yaml' --data-binary @breakout.yaml
 
    - name: Update Breakout on PR synchronize
      if: github.event.action == 'synchronize'
      run: |
        CODE=`curl --write-out '%{http_code}' \
              --silent \
              --output /dev/null \
              -X GET \
              https://appez.kubefocus.com/api/v1/breakouts/detail?cluster=do1\&environment=prod\&application=microservices-demo\&feature=freeshipping\&breakout=$brkoutName`
        echo "CODE=$CODE"
        if [ "$CODE" == "404" ] 
        then
          echo "Not found. Creating through POST"
          METHOD="POST"
        else
          if [ "$CODE" == "200" ]
          then
            echo "Found. Updating through PUT"
            METHOD="PUT"
          else
            echo "FAILURE. Exiting."
            exit 1
          fi
        fi
        echo ${{ github.event.action }}
        echo $METHOD
        echo "I just updated a PR and will update the corresponding breakout"
        curl -X $METHOD https://appez.kubefocus.com/api/v1/breakouts -H 'Content-Type: application/x-yaml' --data-binary @breakout.yaml
