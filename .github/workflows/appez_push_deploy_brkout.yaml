# Look for the tags __MAKE__CHANGES__FROM__HERE__ and __MAKE__CHANGES__TO__HERE__
name: "Update and deploy breakout"
on:
  push:
    # run on push to branch
    branches:
    - c/j5k--e/p9--f/n8pdj--b/4j

jobs:
  create-brkout:
    runs-on: [kubefocus-org]
    steps:
    - uses: actions/checkout@v4

    - name: Build deployments
      id: build
      timeout-minutes: 20
      run: |
        # __MAKE__CHANGES__FROM__HERE__

        # place build commands here
        # Build image and push to registry for container 'server' of deployment 'shippingservice'
        tag=`git rev-parse --short=8 HEAD`
        cd src/shippingservice
        docker buildx build . -t registry.gitlab.com/novusbee/microservices/shippingservice:${tag}
        docker push registry.gitlab.com/novusbee/microservices/shippingservice:${tag}
        echo "IMAGE_shippingservice_server=registry.gitlab.com/novusbee/microservices/shippingservice:${tag}" >> $GITHUB_OUTPUT
        cd ../..
        
        # __MAKE__CHANGES__TO__HERE__

    - name: Create Breakout
      timeout-minutes: 20
      run: |
        cat <<EOF > breakout.yaml
        apiVersion: appez.kubefocus.com/v1beta1
        kind: Breakout
        metadata:
          annotations:
            appez-application-repo-branch: c/j5k--e/p9--f/n8pdj--b/4j
            appez-resource-namespace: -b-h95s9g5
          creationTimestamp: null
          name: b-4j
          namespace: o-fwn-c-j5k-e-p9-d-9zs-i-n8pdj
        spec:
          application: microservices-demo
          baseBreakout: appez-dflt-brkout
          breakout: prod-fs003
          cluster: do1
          environment: prod
          feature: freeshipping
          isPRBreakout: false
          moduleRefs:
          - containers:
            - buildCommands: |
                tag=`git rev-parse --short=8 HEAD`
                cd src/shippingservice
                docker buildx build . -t registry.gitlab.com/novusbee/microservices/shippingservice:${tag}
                docker push registry.gitlab.com/novusbee/microservices/shippingservice:${tag}
                echo "IMAGE_shippingservice_server=registry.gitlab.com/novusbee/microservices/shippingservice:${tag}" >> %%GITHUB_OUTPUT%%
                cd ../..
              env:
              - name: NUM_ITEMS_FOR_FREE_SHIPPING
                value: "003"
              envType: Add
              image: ${{ steps.build.outputs.IMAGE_shippingservice_server }}
              name: server
              resources: {}
            kind: Deployment
            name: shippingservice
          - kind: Service
            name: shippingservice
          organization: kubefocus.com
          resourceAuthzId: cc3b12aa-2b97-4817-82e1-b82089debb27
          routingRules:
            httpRoute: {}
          scope: public
        status: {}
        EOF
        at=`curl --silent -X POST https://appez-keycloak.kubefocus.com/realms/kubefocus.com/protocol/openid-connect/token   -d grant_type=client_credentials   -d client_id=${{secrets.KC_CLIENT_ID}} -d client_secret=${{ secrets.KC_CLIENT_SECRET }} -d scope=openid | jq -r '.access_token'`
        curl --silent -XPOST 'https://appez-keycloak.kubefocus.com/admin/realms/kubefocus.com/clients/${{ secrets.KC_CLIENT_UUID }}/authz/resource-server/policy/evaluate' -H 'accept: application/json' -H "authorization: Bearer ${at}" -H 'content-type: application/json' --data-raw '{"userId":"d5df9e5d-eab2-45ff-baca-a89ac4f1c4a4","resources":[{"_id":"cc3b12aa-2b97-4817-82e1-b82089debb27","scopes":[{"name":"update"}]}]}' | jq -r '.results.[0].allowedScopes'
        curl -X PUT https://appez.kubefocus.com/api/v1/breakouts -H "X-Auth-Bearer-Token: ${at}" -H 'Content-Type: application/x-yaml' --data-binary @breakout.yaml